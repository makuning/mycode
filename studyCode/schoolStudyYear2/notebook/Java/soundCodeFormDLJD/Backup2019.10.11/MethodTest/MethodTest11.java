
/*
	方法在执行过程中，在JVM中的内存是如何分配的，内存是如何变化的
	
	1.方法只定义，不调用不会执行，并且在JVM中也不会给方法分配“运行所属”的内存空间。
	只有在调用这个方法的时候，才会动态的给这个方法分配所属的内存空间
	
	2.在JVM内存划分上有这样三块主要的内存空间（当然除了这三块主要的还有其他内存空间）
		*方法区内存
		*堆内存
		*栈内存
	
    3.关于“栈”数据结构	
		*栈：stack，一种数据结构
		*数据结构反应的是数据的存储形态
		*数据结构是独立的学科，不属于任何编程语言范畴，只不过在大多数语言当中要使用数据结构
		*作为程序员要提前精通：数据结构和算法【计算机专业必修】
        *java程序员不精通数据结构和算法也能进行java开发，因为java语言拥有一套庞大的类库支撑
		别人写好，直接使用即可【javase当中的集合章节使用了大量数据结构】
		*常见的数据结构：
		-数组
		-队列
		-栈
		-链表
		-二叉树
		-哈希表/散列表
		...
	4.方法代码片段存在哪里？方法执行的时候执行过程的内存在哪里分配？

		*方法代码片段属于.class字节码文件的一部分，字节码文件在类加载的时候，
		将其放到了方法区当中。所以JVM中的三块主要内存空间中方法去内存最先有
		数据。存放了代码片段
		
		*代码片段虽然在方法区内存中只有一份，但是可以被重复调用。
		每一次调用这个方法的时候，需要给该方法分配独立活动场所，在
		栈内存中分配。【栈内存中分配方法运行的所属内存空间】

	5.方法在调用的瞬间，会给该方法分配内存空间，会在栈中发生压栈动作，
	方法执行结束后，给该方法分配的内存全部释放，此时发生弹栈动作。
		*压栈：给方法分配内存
		*弹栈：释放该方法的内存空间

	6.局部变量在“方法体”内声明，局部变量运行阶段内存在栈中分配。


*/