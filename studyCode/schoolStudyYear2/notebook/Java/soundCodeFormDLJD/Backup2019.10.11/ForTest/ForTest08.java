
/*
	使用for循环输出九九乘法表：

	1*1=1
	2*1=2 2*2=4
	3*1=3 3*2=6 3*3=9
	...
	9*1=9 ... 9*9=81
	按照这样的格式进行输出

*/

public class ForTest08{
	
	public static void main(String[] args){
		
		for(int i=1;i<=9;i++){
			for(int j=1;j<=i;j++){
				System.out.println(i+"*"+j+"="+(i*j));
			}
		}
		
		//现在的问题是怎么把格式变成需求格式？
		
		//i就是行号，第i行就有i个算式
		
		System.out.println("-------------------");
		
		char a='\n';
		char b='\t';
		
		for(int i=1;i<=9;i++){
			for(int j=1;j<=i;j++){
				System.out.print(i+"*"+j+"="+(i*j)+b);
			}
			System.out.println(a);              
		}
		
		/*
		九九乘法表是每种语言都要进行编写的一个经典例子，经典程度和HelloWorld程序一样
		
		编写的思路：
		九九乘法表它有9行，每行上的算式个数都不一样，与什么有关呢？
		第一行有一个，第二行有两个，第三行有三个...第九行有九个。
		可以看出每一行的算式个数是和行数有关系的，第几行就有几个算式。
		那么，现在九九乘法表有9行，每一行都要输出，利for循环可以让i变量变成行数
		执行到9行后停下来，不输出。
		紧接着，和i相乘的另一个数我们用j来表示，现在看来，j和i有着莫大的关系。
		如何实现第i行输出i个表达式呢？
		那就要控制j来控制输出的个数，让j达到每一行输出的最大算式个数后停下内层for循环。
		当i=1时，j也=1时，输出1*1，然后结束，不能让j=2
		当i=2时，j=1时，输出2*1，再j++，输出2*2，然后结束。不能让j=3
		找出规律了吗？这样看来，只要时刻不让j>i就能控制了！【考虑完这个，整个程序基本上已经写完了】
		那么，对内层for循环中布尔表达式设定条件：j<=i;
		成功了一半。
		现在，写出System.out.println(i+"*"+j+"="+(i*j));好的，
		再考虑一个问题，是否能用println，println表示输出后换行，如果写成这样，那就意味着
		我每次输出一个算式后，都给它换行输出，形成一竖列的数据，这显然和既定格式不符。
		使用print,print表示输出后不换行接着输出
		问题来了，参照既定格式，第一行输出1个算式后，换行，第二行输出2个算式后换行。
		那么，如此看来，换行的时刻在于这行的工作干完之后我才能换行，所以说System.out.println("\n"); 
		这行代码，必须得在内层循环结束后，工作干完后，再换行!
		行了，再放眼于每一行我要干的事情，现在每一行工作着，我要在输出每一个算式后，隔开，输出
		下一个算式，那这样说，我是不是要在每一个算式后加个空格啊？这样一来，输出一个，空一格，输出一个，空一格。
		不过，在实际测试后发现这样的运行结果不太美观，所以，这个空格我用“制表符\t”来代替。
		
		至此，整个九九乘法表的编写结束。

		
		*/
		
		
		//题外话，没听老师说之前，我怎么会想到在换行符和制表符的输出个数上下手啊啊啊啊啊！
		
		
		
		
		
		
	}
}