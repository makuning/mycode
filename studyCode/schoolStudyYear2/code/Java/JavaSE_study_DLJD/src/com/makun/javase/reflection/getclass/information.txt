要操作一个类的字书码，需要首先获取到这个类的字书码,怎么获取java. lang. Class实例?
    三种方式

    第一种、第二种：
        public static void main(String[] args) {
            /*
            Class. forName()
                1、静态方法
                2、方法的参数是一个字符串。
                3、字符串需要的是-个完整类名。
                4、完整类名必须带有包名。java. lang包也不能省略。
            */

            Class c1 = nu11;
            try {
                c1 = Class.forName("java. lang.String"); // c1代表string.class文件,或者说c1代表string类型。
                Class c2 = Class. forName("java .util.Date"); // c2代表Date类型
                Class c3 = Class.forName( "java . lang. Integer"); // c3代表Integer类型
                Class c4 = Class .forName( "java.lang.System"); // c4代表System类型
            } catch (ClassNotFoundException e) {
                e. printStackTrace() ;
            }

            // java中任何-一个对象都有-个方法: getClass()
            String s = "abc";
            Class x = s.getClass(); // x代表String. class字节码文件, x代表string类型。
            System. . out.println(c1 ==Ix); // true (==判断的是对象的内存地址。)

             第三种：
            //第三种方式， java语言中任何一种类型，包括基本数据类型 ,它都有.class属性。
            Class z = String.class; // z代表String类型
            Class k = Date.class; // k代表Date类型
            Class f = int.class; // f代表int类型
            Class e = double. c1ass; // e代表double类型
            System.out.println(x == z); // true
        }
*/